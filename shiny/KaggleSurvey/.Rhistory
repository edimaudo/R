p + coord_flip()
bookPublishing <- books %>%
select (bookAuthor, yearOfPublication) %>%
group_by(yearOfPublication) %>%
tally()
View(bookPublishing)
bookPublishing <- books %>%
select (bookAuthor, yearOfPublication) %>%
group_by(bookAuthor,yearOfPublication) %>%
tally() %>%
arrange(desc(n)) %>%
head(n = 10L)
View(bookPublishing)
p<-ggplot(data=bookPublishing, aes(x=yearOfPublication, y=n)) +
geom_bar(stat="identity")
p
View(users)
View(ratings)
bookAge <- ratings %>%
inner_join(books, by="ISBN") %>%
inner_join(users, by="userID") %>%
select(bookAuthor, Age)
View(bookAge)
# Basic histogram
ggplot(bookAge, aes(x=Age)) + geom_histogram()
# Change the width of bins
# Basic histogram
ggplot(bookAge, aes(x=Age)) + geom_histogram()
# Change the width of bins
ggplot(df, aes(x=weight)) +
geom_histogram(binwidth=1)
# Change the width of bins
ggplot(bookAge, aes(x=Age)) +
geom_histogram(binwidth=1)
# Basic histogram
ggplot(bookAge, aes(x=Age)) + geom_histogram()
# Change the width of bins
ggplot(bookAge, aes(x=Age)) +
geom_histogram(binwidth=10)
ggplot(bookAge, aes(x=Age)) +
geom_histogram(binwidth=25)
bookLocation <- ratings %>%
inner_join(books, by="ISBN") %>%
inner_join(users, by="userID") %>%
select(bookAuthor, Location)
View(bookLocation)
bookLocation2 <- separate(bookLocation, Location,
into = c("area", "location","country"), sep = 3)
bookLocation2 <- separate(bookLocation, Location,
into = c("area", "location","country"), sep = 2)
bookLocation2 <- separate(bookLocation, Location,
into = c("area", "location","country"), sep = ",")
View(bookLocation2)
View(bookLocation2)
bookLocation3 <- bookLocation2 %>%
group_by(bookAuthor, country) %>%
tally()
View(bookLocation3)
shiny::runApp('Documents/Coding/R/shiny/KaggleSurvey')
shiny::runApp('Documents/Coding/R/shiny/KaggleSurvey')
#
# This is a Shiny web application that uses the Kaggle 2019 Data
# Science and Machine learning survery
#
#remove old data
#rm(list=ls())
#packages
packages <- c('ggplot2', 'corrplot','tidyverse','caret','mlbench','mice',
'caTools','dummies','ggfortify','shiny')
#load packages
for (package in packages) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
}
}
#load data
multipleChoice <- read_csv("multiple_choice_responses.csv")
otherText <- read_csv("other_text_responses.csv")
questions <- read_csv("questions_only.csv")
surveySchema<- read_csv("survey_schema.csv")
#
# This is a Shiny web application that uses the Kaggle 2019 Data
# Science and Machine learning survery
#
#remove old data
#rm(list=ls())
#packages
packages <- c('ggplot2', 'corrplot','tidyverse','caret','mlbench','mice',
'caTools','dummies','ggfortify','shiny','ggalluvial','ggeffects',
'viridis','countrycode','highcharter','magrittr')
#load packages
for (package in packages) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
}
}
#load data
multipleChoice <- read_csv("multiple_choice_responses.csv")
otherText <- read_csv("other_text_responses.csv")
questions <- read_csv("questions_only.csv")
surveySchema<- read_csv("survey_schema.csv")
setwd("~/Documents/Coding/R/shiny/KaggleSurvey")
#
# This is a Shiny web application that uses the Kaggle 2019 Data
# Science and Machine learning survery
#
#remove old data
#rm(list=ls())
#packages
packages <- c('ggplot2', 'corrplot','tidyverse','caret','mlbench','mice',
'caTools','dummies','ggfortify','shiny','ggalluvial','ggeffects',
'viridis','countrycode','highcharter','magrittr')
#load packages
for (package in packages) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
}
}
#load data
multipleChoice <- read_csv("multiple_choice_responses.csv")
otherText <- read_csv("other_text_responses.csv")
questions <- read_csv("questions_only.csv")
surveySchema<- read_csv("survey_schema.csv")
responses <- multipleChoice %>%
slice(2:n()) %>%
rename("duration" = `Time from Start to Finish (seconds)`) %>%
mutate(Q3 = str_replace_all(Q3,
c("United Kingdom of Great Britain and Northern Ireland" = "UK" ,
"United States of America" = "USA",
"Hong Kong \\(S\\.A\\.R\\.\\)" = "Hong Kong",
"Iran, Islamic Republic of..." = "Iran")))
reorder_within <- function(x, by, within, fun = mean, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
responses %>%
group_by(Q1, Q2) %>%
summarize(freq = n()) %>%
ggplot(aes(reorder_within(Q1, -freq, Q2), y=freq, fill = factor(Q2))) +
geom_bar(stat = "identity") +
scale_x_reordered() +
facet_wrap(~ Q2, scales = "free") +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="D") +
theme_minimal() +
labs(x = "Age", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position="none")
install.packages(package)
responses %>%
group_by(Q1, Q2) %>%
summarize(freq = n()) %>%
ggplot(aes(reorder_within(Q1, -freq, Q2), y=freq, fill = factor(Q2))) +
geom_bar(stat = "identity") +
scale_x_reordered() +
facet_wrap(~ Q2, scales = "free") +
scale_fill_viridis(discrete = TRUE, alpha=0.6, option="D") +
theme_minimal() +
labs(x = "Age", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position="none")
responses %>%
group_by(Q1, Q2) %>%
summarize(freq = n()) %>%
ggplot(aes(reorder_within(Q1, -freq, Q2), y=freq, fill = factor(Q2))) +
geom_bar(stat = "identity")
View(responses)
genderinfo <- responses %>%
select(Q2) %>%
summarize(freq = n())
View(genderinfo)
genderinfo <- responses %>%
select(Q2) %>%
group_by(Q2) %>%
summarize(freq = n())
View(genderinfo)
genderinfo + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position="none")
genderinfo + geom_bar(stat = "identity")
genderinfo + geom_bar()
p<-ggplot(data=genderinfo, aes(x=Q2, y=n)) +
geom_bar(stat="identity") + theme_minimal()
ggplot(data=genderinfo, aes(x=Q2, y=n)) +
geom_bar(stat="identity") + theme_minimal()
ggplot(data=genderinfo, aes(x=Q2, y=n)) +
geom_bar() + theme_minimal()
View(genderinfo)
ggplot(data=genderinfo, aes(x=Q2, y=freq)) +
geom_bar(stat="identity") + theme_minimal()
ggplot(data=genderinfo, aes(x=Q2, y=freq)) +
geom_bar(stat="identity") + theme_classic()
genderinfo <- responses %>%
select(Q2) %>%
group_by(Q2) %>%
summarize(freq = n()) %>%
arrange(desc(freq))
ggplot(data=genderinfo, aes(x=Q2, y=freq)) +
geom_bar(stat="identity") + theme_classic()
View(genderinfo)
ggplot(data=genderinfo, aes(x=Q2, y=freq)) +
geom_bar(stat="identity") + theme_classic() + labs(x = "Gender", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position="none")
genderinfo <- genderinfo %>%
arrange(desc(freq))
ggplot(data=genderinfo, aes(x=Q2, y=freq)) +
geom_bar(stat="identity") + theme_classic() + labs(x = "Gender", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position="none")
View(genderinfo)
ggplot(data=genderinfo, aes(x=reorder(Q2,-freq), y=freq)) +
geom_bar(stat="identity") + theme_classic() + labs(x = "Gender", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position="none")
genderinfo <- responses %>%
select(Q2) %>%
group_by(Q2) %>%
summarize(freq = n()) %>%
arrange(desc(freq)) + ggplot(data=genderinfo, aes(x=reorder(Q2,-freq), y=freq)) +
geom_bar(stat="identity") + theme_classic() + labs(x = "Gender", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position="none")
ageinfo <- responses %>%
select(Q1) %>%
group_by(Q1) %>%
summarise(count = n())
View(ageinfo)
ggplot(data=genderinfo, aes(x=reorder(Q2,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Gender", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position="none")
ggplot(data=genderinfo, aes(x=reorder(Q2,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Gender", y = "Count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
legend.position="none")
ggplot(data=genderinfo, aes(x=reorder(Q2,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Gender", y = "Count") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),
legend.position="none")
ggplot(data=ageinfo, aes(x=Q2, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Age", y = "Count") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),legend.position="none")
ggplot(data=ageinfo, aes(x=Q1, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Age", y = "Count") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),legend.position="none")
ageinfo <- responses %>%
select(Q1) %>%
group_by(Q1) %>%
summarise(freq = n())
ggplot(data=ageinfo, aes(x=Q1, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Age", y = "Count") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),legend.position="none")
highchart(type = "map") %>%
hc_add_series_map(worldgeojson,
responses %>%
group_by(Q3) %>%
summarise(total = n()) %>%
ungroup() %>%
mutate(iso2 = countrycode(Q3, origin="country.name", destination="iso2c")),
value = "total", joinBy = "iso2") %>%
hc_title(text = "Kagglers by country") %>%
hc_colorAxis(minColor = "#e8eded", maxColor = "steelblue")
packages <- c('ggplot2', 'corrplot','tidyverse','caret','mlbench','mice',
'caTools','dummies','ggfortify','shiny','ggalluvial','ggeffects',
'viridis','countrycode','highcharter','magrittr')
#load packages
for (package in packages) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
}
}
packages <- c('ggplot2', 'corrplot','tidyverse','caret','mlbench','mice',
'caTools','dummies','ggfortify','shiny','countrycode','highcharter')
#load packages
for (package in packages) {
if (!require(package, character.only=T, quietly=T)) {
install.packages(package)
library(package, character.only=T)
}
}
#Country
highchart(type = "map") %>%
hc_add_series_map(worldgeojson,
responses %>%
group_by(Q3) %>%
summarise(total = n()) %>%
ungroup() %>%
mutate(iso2 = countrycode(Q3, origin="country.name", destination="iso2c")),
value = "total", joinBy = "iso2") %>%
hc_title(text = "Kagglers by country") %>%
hc_colorAxis(minColor = "#e8eded", maxColor = "steelblue")
ggplot(data=educationinfo, aes(x=reorder(Q4,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Degree", y = "Count") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),legend.position="none")
#Education degrees
educationinfo <- responses %>%
select(Q4) %>%
group_by(Q4) %>%
summarise(freq = n())
ggplot(data=educationinfo, aes(x=reorder(Q4,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Degree", y = "Count") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),legend.position="none")
educationinfo <- na.omit(educationinfo)
ggplot(data=educationinfo, aes(x=reorder(Q4,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Degree", y = "Count") +
theme(axis.text.x = element_text(angle = 0, hjust = 1),legend.position="none")
ggplot(data=educationinfo, aes(x=reorder(Q4,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Degree", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
country <- unique(responses$Q3)
runApp()
runApp()
runApp()
runApp()
educationinfo <- responses %>%
select(Q4) %>%
group_by(Q4) %>%
summarise(freq = n())
educationinfo <- na.omit(educationinfo)
ggplot(data=educationinfo, aes(x=reorder(Q4,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Degree", y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
#time spent learning to code
timeleanringinfo <- responses %>%
select(Q23) %>%
group_by(Q23) %>%
summarise(freq = n())
educationinfo <- na.omit(timeleanringinfo)
ggplot(data=educationinfo, aes(x=reorder(Q23,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Time learning to code",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
ggplot(data=educationinfo, aes(x=reorder(Q23,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Time learning to code",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
#company size
companysizeinfo <- responses %>%
select(Q6) %>%
group_by(Q6) %>%
summarise(freq = n())
companysizeinfo <- na.omit(companysizeinfo)
ggplot(data=timeleanringmachineinfo, aes(x=Q6, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
companysizeinfo <- na.omit(companysizeinfo)
ggplot(data=companysizeinfo, aes(x=Q6, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
companysizeinfo <- na.omit(companysizeinfo)
ggplot(data=companysizeinfo, aes(x=Q6, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
companysizeinfo <- na.omit(companysizeinfo)
ggplot(data=companysizeinfo, aes(x=reorder(Q6,-freq), y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
companysizeinfo <- na.omit(companysizeinfo)
ggplot(data=companysizeinfo, aes(x=Q6, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
companysizeinfo <- na.omit(companysizeinfo)
ggplot(data=companysizeinfo, aes(x=Q6, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
#data science team size
companydatasizeinfo <- responses %>%
select(Q7) %>%
group_by(Q7) %>%
summarise(freq = n())
companydatasizeinfo <- na.omit(companydatasizeinfo)
ggplot(data=companysizeinfo, aes(x=Q7, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees in Data Science team",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
#data science team size
companydatasizeinfo <- responses %>%
select(Q7) %>%
group_by(Q7) %>%
summarise(freq = n())
companydatasizeinfo <- na.omit(companydatasizeinfo)
ggplot(data=companysizeinfo, aes(x=Q7, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees in Data Science team",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
#data science team size
companydatasizeinfo <- responses %>%
select(Q7) %>%
group_by(Q7) %>%
summarise(freq = n())
companydatasizeinfo <- na.omit(companydatasizeinfo)
ggplot(data=companydatasizeinfo, aes(x=Q7, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "# of Employees in Data Science team",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
enterpriseinfo <- na.omit(companydatasizeinfo)
ggplot(data=enterpriseinfo, aes(x=Q8, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Enterprise machine learning adoption",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
enterpriseinfo  <- responses %>%
select(Q8) %>%
group_by(Q8) %>%
summarise(freq = n())
enterpriseinfo <- na.omit(enterpriseinfo)
ggplot(data=enterpriseinfo, aes(x=Q8, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Enterprise machine learning adoption",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
#Enterprise machine learning adoption
enterpriseinfo  <- responses %>%
select(Q8) %>%
group_by(Q8) %>%
summarise(freq = n())
enterpriseinfo <- na.omit(enterpriseinfo)
ggplot(data=enterpriseinfo, aes(x=Q8, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Enterprise machine learning adoption",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
unique(Q10)
unique(respones$Q10)
unique(responses$Q10)
unique(responses$Q11)
#salary
salaryinfo <- responses %>%
select(Q10) %>%
group_by(Q10) %>%
summarise(freq = n())
salaryinfo <- na.omit(salaryinfo)
ggplot(data=salaryinfo, aes(x=reorder(Q10, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Salaries",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
#salary
salaryinfo <- responses %>%
select(Q10) %>%
group_by(Q10) %>%
summarise(freq = n())
salaryinfo <- na.omit(salaryinfo)
ggplot(data=salaryinfo, aes(x=Q10, y=freq) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Salaries",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
#salary
salaryinfo <- responses %>%
select(Q10) %>%
group_by(Q10) %>%
summarise(freq = n())
salaryinfo <- responses %>%
select(Q10) %>%
group_by(Q10) %>%
summarise(freq = n())
salaryinfo <- na.omit(salaryinfo)
ggplot(data=salaryinfo, aes(x=Q10, y=freq) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Salaries",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
salaryinfo <- na.omit(salaryinfo)
ggplot(data=salaryinfo, aes(x=Q10, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Salaries",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none")
unique(responses$Q9_Part_5)
unique(responses$Q9_Part_1)
unique(responses$Q9_Part_2)
datasciencetimespent <- cbind(responses$Q9_Part_1,responses$Q9_Part_2,responses$Q9_Part_3,
responses$Q9_Part_4,responses$Q9_Part_5, responses$Q9_Part_6,
responses$Q9_Part_7, responses$Q29_Part_8, responses$Q29_Part_9)
View(datasciencetimespent)
datasciencetimespent <- rbind(responses$Q9_Part_1,responses$Q9_Part_2,responses$Q9_Part_3,
responses$Q9_Part_4,responses$Q9_Part_5, responses$Q9_Part_6,
responses$Q9_Part_7, responses$Q29_Part_8, responses$Q29_Part_9)
View(datasciencetimespent)
glimpse(datasciencetimespent)
datasciencetimespent %>% unite(responses$Q9_Part_1,responses$Q9_Part_2,responses$Q9_Part_3,
responses$Q9_Part_4,responses$Q9_Part_5, responses$Q9_Part_6,
responses$Q9_Part_7, responses$Q29_Part_8, responses$Q29_Part_9)
head(datasciencetimespent, 10)
datasciencetimespent <- NULL
datasciencetimespent <- cbind(responses$Q9_Part_1,responses$Q9_Part_2,responses$Q9_Part_3,
responses$Q9_Part_4,responses$Q9_Part_5, responses$Q9_Part_6,
responses$Q9_Part_7, responses$Q29_Part_8, responses$Q29_Part_9)
glimpse(datasciencetimespent)
summary(datasciencetimespent)
datasciencetimespent <- rbind(responses$Q9_Part_1,responses$Q9_Part_2,responses$Q9_Part_3,
responses$Q9_Part_4,responses$Q9_Part_5, responses$Q9_Part_6,
responses$Q9_Part_7, responses$Q29_Part_8, responses$Q29_Part_9)
summary(datasciencetimespent)
unique(responses$Q10)
unique(responses$Q11)
enterprisespendinginfo  <- responses %>%
select(Q11) %>%
group_by(Q11) %>%
summarise(freq = n())
enterprisespendinginfo<- na.omit(enterprisespendinginfo)
ggplot(data=enterprisespendinginfo, aes(x=Q11, y=freq)) +
geom_bar(stat="identity",fill="steelblue") + theme_classic() + labs(x = "Enterprise spending",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="none") + coord_flip()
